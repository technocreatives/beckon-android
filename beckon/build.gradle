apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 29
        buildToolsVersion = "29.0.2"
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        development {

        }
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.

        disable "UnusedResources"              // Unused will be removed on release
        disable "IconExpectedSize"             // Using the material icons provided from Google
        disable "GoogleAppIndexingApiWarning"  // We might want to index our app later
        disable "InvalidPackage"               // Butterknife, Okio and Realm
        disable "ResourceType"                 // Annotation binding
        disable "GradleDependency"
        disable "NewerVersionAvailable"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions {
            freeCompilerArgs ['-Xuse-experimental=kotlin.ExperimentalUnsignedTypes']
        }
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
                unitTests.all {
                    testLogging.events = ["passed", "skipped", "failed"]
                }
            }
        }
    }
    buildToolsVersion = '28.0.3'
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

configurations {
    ktlint
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Android x
    api 'androidx.core:core-ktx:1.2.0-alpha03'
    api 'androidx.annotation:annotation:1.1.0'

    // RxJava
    api "io.reactivex.rxjava2:rxjava:$rxJava"
    api "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    // Bluetooth
    api "no.nordicsemi.android.support.v18:scanner:$nsScannerVersion"
    api "no.nordicsemi.android:ble:$nsBleVersion"
    api "no.nordicsemi.android:dfu:$nsDfuVersion"

    // Code quality tools
    ktlint "com.github.shyiko:ktlint:$ktlint_version"

    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.github.lenguyenthanh:simpleredux:$simpleredux"

    // Arrows
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "com.github.lenguyenthanh:RxArrow:$rxarrow"

    // Spek
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    // Spek requires kotlin-reflect, omit when already in classpath
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "org.assertj:assertj-core:3.13.2"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
